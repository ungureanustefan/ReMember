{"version":3,"sources":["components/Remember.jsx","components/Textarea.jsx","components/Add.jsx","components/Images.jsx","components/TextAdd.jsx","components/Delete.jsx","components/Archive.jsx","components/LabelFunction.jsx","components/Note.jsx","components/Notes.jsx","components/Footer.jsx","components/Archived.jsx","components/Labels.jsx","components/SideBar.jsx","components/HomePage.jsx","components/Logging.jsx","components/Navbar.jsx","components/App.jsx","services/NotesService.js","index.js"],"names":["Remember","className","style","paddingLeft","Component","Textarea","placeholder","text-align","value","this","props","noteText","onChange","onTextChange","Add","state","onClick","onTextAdd","Images","readURL","fileInput","files","reader","FileReader","onload","e","onImgAdd","target","result","readAsDataURL","type","accept","hidden","ref","id","click","TextAdd","text","setState","currentText","onNoteAdd","Delete","href","onNoteDelete","Archive","onNoteArchive","LabelFunction","labelButton","labelButtonClicked","isInEditMode","changeEditMode","resetButton","onLabelUpdate","updateComponentValue","newLabel","refs","theTextInput","renderEditView","position","size","maxLength","defaultValue","renderDefaultView","label","console","log","Note","note","name","src","image","_id","Notes","noteArr","notesProp","filter","showArchived","archive","map","key","Footer","fontSize","Archived","onToggleArchived","textDecoration","Labels","SideBar","onSidebarOpen","sidebarOpen","onXButton","renderSidebar","marginRight","color","border","menuBar","marginLeft","marginTop","backgroundColor","height","width","HOMEPAGE","Logging","Navbar","HomePage","App","toggleArchived","fetch","method","body","JSON","stringify","headers","then","r","json","notesNew","notes","addImgNote","noteID","deleteNote","archiveNote","labelAdd","ReactDOM","render","document","getElementById"],"mappings":"oPAkBeA,E,uKAfX,OACE,yBAAKC,UAAU,YACb,yBAAKA,UAAU,QACb,wBAAIA,UAAU,KAAKC,MAAO,CAAEC,YAAa,SAAzC,QAIF,6BACE,wBAAIF,UAAU,UAAd,gB,GAVaG,aCkBRC,E,uKAhBX,OACE,yBAAKJ,UAAU,YACb,yBAAKA,UAAU,SACb,8BACEA,UAAU,OACVK,YAAY,kBACZC,aAAW,SACXC,MAAOC,KAAKC,MAAMC,SAClBC,SAAUH,KAAKC,MAAMG,qB,GAVVT,aCeRU,E,4MAdbC,MAAQ,G,uDAEN,OACE,yBAAKd,UAAU,YACb,yBAAKA,UAAU,UACb,4BAAQA,UAAU,MAAMe,QAASP,KAAKC,MAAMO,WAA5C,a,GANQb,aCuCHc,E,kDAtCb,WAAYR,GAAQ,IAAD,8BACjB,cAAMA,IAGRS,QAAU,WACR,GAAI,EAAKC,UAAUC,OAAS,EAAKD,UAAUC,MAAM,GAAI,CACnD,IAAMC,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,SAACC,GACf,EAAKf,MAAMgB,SAASD,EAAEE,OAAOC,SAE/BN,EAAOO,cAAc,EAAKT,UAAUC,MAAM,MAX3B,E,qDAeT,IAAD,OACP,OACE,6BACE,2BACES,KAAK,OACLC,OAAO,mCACPC,OAAO,SACPC,IAAK,SAACb,GAAD,OAAgB,EAAKA,UAAYA,GACtCR,SAAUH,KAAKU,UAGjB,4BACElB,UAAU,SACViC,GAAG,SACHlB,QAAS,kBAAM,EAAKI,UAAUe,UAHhC,kB,GA3Ba/B,aCiCNgC,E,kDA7Bb,WAAY1B,GAAQ,IAAD,8BACjB,cAAMA,IAIRG,aAAe,SAACY,GACd,IAAMY,EAAOZ,EAAEE,OAAOnB,MACtB,EAAK8B,SAAS,CAAEC,YAAaF,KAPZ,EAUnBpB,UAAY,WACV,EAAKP,MAAM8B,UAAU,EAAKzB,MAAMwB,aAChC,EAAKD,SAAS,CAAEC,YAAa,MAV7B,EAAKxB,MAAQ,CAAEwB,YAAa,IAFX,E,qDAgBjB,OACE,yBAAKtC,UAAU,YACb,kBAAC,EAAD,CACEY,aAAcJ,KAAKI,aACnBF,SAAUF,KAAKM,MAAMwB,cAEvB,kBAAC,EAAD,CAAKtB,UAAWR,KAAKQ,YACrB,kBAAC,EAAD,CAAQS,SAAUjB,KAAKC,MAAMgB,gB,GAxBftB,a,OCUPqC,E,uKARX,OACE,4BAAQxC,UAAU,eAAe6B,KAAK,SAASY,KAAK,IAAI1B,QAASP,KAAKC,MAAMiC,cAC1E,kBAAC,IAAD,W,GAJavC,a,QCQNwC,E,uKARX,OACE,4BAAQ3C,UAAU,eAAe6B,KAAK,SAASY,KAAK,KAClD,kBAAC,IAAD,CAAa1B,QAASP,KAAKC,MAAMmC,qB,GAJnBzC,a,QCkFP0C,E,kDAhFd,WAAYpC,GAAQ,IAAD,8BACjB,cAAMA,IAORqC,YAAc,WACZ,OAAO,4BAAQ9C,UAAU,eAAee,QAAS,EAAKgC,oBAAoB,kBAAC,IAAD,QATzD,EAYnBA,mBAAqB,WACnB,EAAKV,SAAS,CACZ9B,MAAO,GACPyC,cAAc,KAfC,EAoBpBC,eAAiB,WACf,EAAKZ,SAAS,CACZW,cAAe,EAAKlC,MAAMkC,gBAtBV,EA0BpBE,YAAc,WACZ,EAAKb,SAAS,CACZ9B,MAAO,GACPyC,cAAc,IAGhB,EAAKvC,MAAM0C,cAAc,KAhCP,EAmCpBC,qBAAuB,WACrB,IAAMC,EAAW,EAAKC,KAAKC,aAAahD,MACxC,EAAK8B,SAAS,CACZW,cAAc,EACdzC,MAAO8C,IAET,EAAK5C,MAAM0C,cAAcE,IAzCP,EA4CpBG,eAAiB,WACf,OAAO,yBAAKvD,MAAO,CAACwD,SAAU,aAC9B,2BAAO5B,KAAK,OACZ6B,KAAK,KACLC,UAAU,KACVtD,YAAY,kBACZuD,aAAc,EAAK9C,MAAMP,MACzByB,IAAI,iBACJ,4BAAQjB,QAAS,EAAKqC,sBAAtB,UACA,4BAAQrC,QAAS,EAAKmC,aAAtB,YArDkB,EA0DpBW,kBAAoB,WAClB,OAAO,yBAAK7D,UAAU,cAAce,QAAS,EAAKkC,gBACjD,EAAKnC,MAAMP,QA1DX,EAAKO,MAAQ,CAACP,MAAOE,EAAMqD,MAAOd,cAAc,GAChDe,QAAQC,IAAI,EAAKlD,OACjBiD,QAAQC,IAAIvD,GAJK,E,qDAmEjB,OAAOD,KAAKM,MAAMkC,aAClBxC,KAAKgD,iBACgB,KAArBhD,KAAKM,MAAMP,MACXC,KAAKsC,cACLtC,KAAKqD,wB,GAxEoB1D,aCgCb8D,E,uKA7BH,IAAD,OACP,OACE,wBAAIhC,GAAG,aACL,2BACGzB,KAAKC,MAAMyD,KAAKC,KACf,4BAAK3D,KAAKC,MAAMyD,KAAKC,MAErB,yBAAKC,IAAK5D,KAAKC,MAAMyD,KAAKG,MAAOrE,UAAU,WAG/C,yBAAKiC,GAAG,SACR,yBAAKjC,UAAU,SACf,yBAAKA,UAAU,aACf,kBAAC,EAAD,CACE0C,aAAc,kBAAM,EAAKjC,MAAMiC,aAAa,EAAKjC,MAAMyD,KAAKI,QAE9D,kBAAC,EAAD,CACE1B,cAAe,kBAAM,EAAKnC,MAAMmC,cAAc,EAAKnC,MAAMyD,KAAKI,QAEhE,kBAAC,EAAD,CAAeR,MAAOtD,KAAKC,MAAMyD,KAAKJ,MACtCX,cAAe,SAACW,GAAD,OAAW,EAAKrD,MAAM0C,cAAc,EAAK1C,MAAMyD,KAAKI,IAAKR,a,GArB7D3D,aCwBJoE,E,kDAzBb,WAAY9D,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,GAFI,E,qDAKT,IAAD,OAED0D,EADMhE,KAAKC,MAAMgE,UAEpBC,QAAO,SAACR,GACP,OAAO,EAAKzD,MAAMkE,aAAeT,EAAKU,SAAWV,EAAKU,WAEvDC,KAAI,SAACX,GAAD,OACH,kBAAC,EAAD,CACEY,IAAKZ,EAAKI,IACVJ,KAAMA,EACNxB,aAAc,EAAKjC,MAAMiC,aACzBE,cAAe,EAAKnC,MAAMmC,cAC1BO,cAAe,EAAK1C,MAAM0C,mBAIhC,OAAO,wBAAInD,UAAU,QAAQwE,O,GAtBbrE,aCcL4E,E,uKAdX,OACE,yBAAK/E,UAAU,kBACb,yBAAKA,UAAU,gBACb,4BAAQA,UAAU,UAChB,wBAAIA,UAAU,YAAYC,MAAO,CAAE+E,SAAU,SAA7C,wC,GANS7E,aCcN8E,E,uKAZX,OACE,yBAAKjF,UAAU,kBACb,uBAAGC,MAAO,CAAE+E,SAAU,QAAUhF,UAAU,YACxC,uBAAGyC,KAAK,IAAI1B,QAASP,KAAKC,MAAMyE,iBAAkBjF,MAAO,CAACkF,eAAgB,SAA1E,kB,GALahF,aCYRiF,E,uKAVX,OACE,yBAAKpF,UAAU,kBACb,uBAAGC,MAAO,CAAE+E,SAAU,QAAUhF,UAAU,YACxC,uBAAGyC,KAAK,IAAIxC,MAAO,CAACkF,eAAgB,SAApC,gB,GALWhF,a,QC+CNkF,E,kDAxCT,WAAY5E,GAAQ,IAAD,8BACjB,cAAMA,IAKR6E,cAAgB,WACd,EAAKjD,SAAS,CAACkD,aAAa,KAPX,EAUnBC,UAAY,WACR,EAAKnD,SAAS,CAACkD,aAAa,KAXb,EAcnBE,cAAgB,WACZ,OAAO,yBAAKzF,UAAU,aAC9B,uBAAGyC,KAAK,IAAI1B,QAAS,EAAKyE,UAAWvF,MAAO,CAACyF,YAAY,OAAQC,MAAM,QAASC,OAAO,IAAKT,eAAe,SAA3G,UACD,wBAAIlF,MAAO,CAAC0F,MAAO,UAAnB,WAEC,kBAAC,EAAD,CAAUT,iBAAkB,EAAKzE,MAAMyE,mBACvC,kBAAC,EAAD,QApBuB,EAwBnBW,QAAU,WACR,OAAO,yBAAK5F,MAAO,CAAC6F,WAAY,OAAQC,UAAU,SAC5C,4BAAQhF,QAAS,EAAKuE,cAAerF,MAAO,CAAC+F,gBAAgB,QAASJ,OAAO,MACzE,kBAAC,IAAD,CAAQ3F,MAAO,CAAEgG,OAAQ,OAAQC,MAAO,aAzBlD,EAAKpF,MAAQ,CACXyE,aAAc,GAHC,E,qDAkCjB,OAAO/E,KAAKM,MAAMyE,YAChB/E,KAAKiF,gBACLjF,KAAKqF,c,GAtCO1F,aCaPgG,E,uKAfX,OACE,6BACA,yBAAKnG,UAAU,kBACf,6BAAK,kBAAC,EAAD,CAASkF,iBAAkB1E,KAAKC,MAAMyE,oBAEzC,uBAAGjF,MAAO,CAAE+E,SAAU,QAAUhF,UAAU,YACxC,uBAAGyC,KAAK,IAAKxC,MAAO,CAACkF,eAAgB,SAArC,e,GARahF,aCWRiG,E,uKAVX,OACE,yBAAKpG,UAAU,kBACb,uBAAGC,MAAO,CAAE+E,SAAU,QAAUhF,UAAU,WAA1C,8B,GAJcG,aCmBPkG,E,uKAXX,OACE,6BACA,yBAAKrG,UAAU,kBACb,kBAACsG,EAAD,CAAUpB,iBAAkB1E,KAAKC,MAAMyE,mBACvC,kBAAC,EAAD,Y,GATa/E,a,ICqFNoG,E,kDA1Eb,WAAY9F,GAAQ,IAAD,8BACjB,cAAMA,IAQR+F,eAAiB,SAAChF,GAChB,EAAKa,SAAS,CACZsC,cAAe,EAAK7D,MAAM6D,gBAXX,EAoBnBpC,UAAY,SAAC7B,GC9BR,IAAqBwD,KD+BZxD,EC9BP+F,MAAM,8BAA+B,CAC1CC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAE1C,KAAMD,IAC7B4C,QAAS,CACP,eAAgB,sBAEjBC,MAAK,SAACC,GAAD,OAAOA,EAAEC,WDwBOF,MAAK,SAAC7C,GAC1B,IAAMgD,EAAQ,CAAIhD,GAAJ,mBAAa,EAAKpD,MAAMqG,QACtC,EAAK9E,SAAS,CAAE8E,MAAOD,QAvBR,EA0BnBzF,SAAW,SAAC4C,GACVN,QAAQC,IAAIK,GC3BT,SAAoBA,GACzB,OAAOoC,MAAM,8BAA+B,CAC1CC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAExC,MAAOA,IAC9ByC,QAAS,CACP,eAAgB,sBAEjBC,MAAK,SAACC,GAAD,OAAOA,EAAEC,UDqBfG,CAAW/C,GAAO0C,MAAK,SAAC7C,GACtB,IAAMgD,EAAQ,CAAIhD,GAAJ,mBAAa,EAAKpD,MAAMqG,QACtC,EAAK9E,SAAS,CAAE8E,MAAOD,QA9BR,EAkCnBxE,aAAe,SAAC2E,GACd,IAAMH,EAAW,EAAKpG,MAAMqG,MAAMzC,QAAO,SAACR,GAAD,OAAUA,EAAKI,MAAQ+C,KAChE,EAAKhF,SAAS,CAAE8E,MAAOD,IC1BpB,SAAoBG,GAClBZ,MAAM,+BAAiCY,EAAQ,CACpDX,OAAQ,WDyBRY,CAAWD,IArCM,EAwCnBzE,cAAgB,SAACyE,GACf,IAAMH,EAAW,EAAKpG,MAAMqG,MAC5BD,EAASxC,QAAO,SAACR,GAAD,OAAUA,EAAKI,MAAQ+C,KAAQ,GAAGzC,SAAU,EAC5D,EAAKvC,SAAS,CAAE8E,MAAOD,IC3BpB,SAAqBG,GACnBZ,MAAM,+BAAiCY,EAAQ,CACpDX,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEjC,SAAS,IAChCkC,QAAS,CACP,eAAgB,sBDuBlBS,CAAYF,IA5CK,EA+CnBlE,cAAgB,SAACkE,EAAQvD,GACvB,IAAMoD,EAAW,EAAKpG,MAAMqG,MAC5BD,EAASxC,QAAO,SAACR,GAAD,OAAUA,EAAKI,MAAQ+C,KAAQ,GAAGvD,MAAQA,EAC1D,EAAKzB,SAAS,CAAE8E,MAAOD,ICzBpB,SAAkBG,EAAQvD,GACxB2C,MAAM,+BAAiCY,EAAQ,CACpDX,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAE/C,MAAOA,IAC9BgD,QAAS,CACP,eAAgB,sBDqBlBU,CAASH,EAAQvD,IAjDjB,EAAKhD,MAAQ,CAAEqG,MAAO,GAAIxC,cAAc,GAFvB,E,gEAKE,IAAD,OCnBb8B,MAAM,gCACVM,MAAK,SAACC,GAAD,OAAOA,EAAEC,UDmBJF,MAAK,SAACI,GAAD,OAAW,EAAK9E,SAAS,CAAE8E,MAAOA,S,2CAUlDpD,QAAQC,IAAIxD,KAAKM,MAAM6D,gB,+BAuCvB,OACE,6BACE,kBAAC,EAAD,CAAQO,iBAAkB1E,KAAKgG,iBAC/B,kBAAC,EAAD,MACA,kBAAC,EAAD,CAASjE,UAAW/B,KAAK+B,UAAWd,SAAUjB,KAAKiB,WACnD,kBAAC,EAAD,CACEgD,UAAWjE,KAAKM,MAAMqG,MACtBzE,aAAclC,KAAKkC,aACnBE,cAAepC,KAAKoC,cACpB+B,aAAcnE,KAAKM,MAAM6D,aACzBxB,cAAe3C,KAAK2C,gBAEtB,wBAAIlB,GAAG,QACP,kBAAC,EAAD,W,GArEU9B,aEVlBsH,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.be3e4bbd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nclass Remember extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"remember\">\r\n        <div className=\"test\">\r\n          <h1 className=\"re\" style={{ paddingLeft: \"50px\" }}>\r\n            Re:\r\n          </h1>\r\n        </div>\r\n        <div>\r\n          <h1 className=\"member\">Member</h1>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Remember;\r\n","import React, { Component } from \"react\";\r\nclass Textarea extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"textarea\">\r\n        <div className=\"notes\">\r\n          <textarea\r\n            className=\"text\"\r\n            placeholder=\"Enter text here\"\r\n            text-align=\"center\"\r\n            value={this.props.noteText}\r\n            onChange={this.props.onTextChange}\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Textarea;\r\n","import React, { Component } from \"react\";\r\nclass Add extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"textarea\">\r\n        <div className=\"button\">\r\n          <button className=\"add\" onClick={this.props.onTextAdd}>\r\n            Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Add;\r\n","import React, { Component } from \"react\";\r\nclass Images extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  readURL = () => {\r\n    if (this.fileInput.files && this.fileInput.files[0]) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = (e) => {\r\n        this.props.onImgAdd(e.target.result);\r\n      };\r\n      reader.readAsDataURL(this.fileInput.files[0]);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/x-png,image/gif,image/jpeg\"\r\n          hidden=\"hidden\"\r\n          ref={(fileInput) => (this.fileInput = fileInput)}\r\n          onChange={this.readURL}\r\n        />\r\n\r\n        <button\r\n          className=\"images\"\r\n          id=\"upload\"\r\n          onClick={() => this.fileInput.click()}\r\n        >\r\n          Add Image\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Images;\r\n","import React, { Component } from \"react\";\r\nimport Textarea from \"./Textarea\";\r\nimport Add from \"./Add\";\r\nimport Images from \"./Images\";\r\nclass TextAdd extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentText: \"\" };\r\n  }\r\n\r\n  onTextChange = (e) => {\r\n    const text = e.target.value;\r\n    this.setState({ currentText: text });\r\n  };\r\n\r\n  onTextAdd = () => {\r\n    this.props.onNoteAdd(this.state.currentText);\r\n    this.setState({ currentText: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"textarea\">\r\n        <Textarea\r\n          onTextChange={this.onTextChange}\r\n          noteText={this.state.currentText}\r\n        />\r\n        <Add onTextAdd={this.onTextAdd} />\r\n        <Images onImgAdd={this.props.onImgAdd} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextAdd;\r\n","import React, { Component } from \"react\";\r\nimport { CgTrashEmpty } from \"react-icons/cg\";\r\n\r\n\r\nclass Delete extends Component {\r\n  render() {\r\n    return (\r\n      <button className=\"note-buttons\" type=\"button\" href=\"#\" onClick={this.props.onNoteDelete}>\r\n        <CgTrashEmpty />\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Delete;\r\n","import React, { Component } from \"react\";\r\nimport { BiArchiveIn } from \"react-icons/bi\";\r\nclass Archive extends Component {\r\n  render() {\r\n    return (\r\n      <button className=\"note-buttons\" type=\"button\" href=\"#\">\r\n        <BiArchiveIn onClick={this.props.onNoteArchive} />\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Archive;\r\n","import React, { Component } from \"react\";\r\nimport { GoPlus } from \"react-icons/go\";\r\n\r\nclass LabelFunction extends Component {\r\n constructor(props) {\r\n   super(props)\r\n   this.state = {value: props.label, isInEditMode: false};\r\n   console.log(this.state)\r\n   console.log(props)\r\n }\r\n\r\n\r\n labelButton = () => {\r\n   return <button className=\"note-buttons\" onClick={this.labelButtonClicked}><GoPlus /></button>\r\n }\r\n\r\n labelButtonClicked = () => {\r\n   this.setState({\r\n     value: \"\",\r\n     isInEditMode: true\r\n   })\r\n }\r\n\r\n\r\nchangeEditMode = () => {\r\n  this.setState({\r\n    isInEditMode: !this.state.isInEditMode\r\n  })\r\n}\r\n\r\nresetButton = () => {\r\n  this.setState({\r\n    value: \"\",\r\n    isInEditMode: false\r\n    \r\n  })\r\n  this.props.onLabelUpdate(\"\")\r\n}\r\n\r\nupdateComponentValue = () => {\r\n  const newLabel = this.refs.theTextInput.value\r\n  this.setState({\r\n    isInEditMode: false,\r\n    value: newLabel\r\n  })\r\n  this.props.onLabelUpdate(newLabel)\r\n}\r\n\r\nrenderEditView = () => {\r\n  return <div style={{position: \"absolute\"}}>\r\n  <input type=\"text\"\r\n  size=\"23\"\r\n  maxLength=\"14\"\r\n  placeholder=\"Type in a label\"\r\n  defaultValue={this.state.value}\r\n  ref=\"theTextInput\" />\r\n  <button onClick={this.updateComponentValue}>✓</button>\r\n  <button onClick={this.resetButton}>✘</button>\r\n\r\n</div>\r\n}\r\n\r\nrenderDefaultView = () => {\r\n  return <div className=\"defaultView\" onClick={this.changeEditMode}> \r\n  {this.state.value}\r\n  </div>\r\n}\r\n\r\n\r\n \r\n render() {\r\n   return this.state.isInEditMode ?\r\n   this.renderEditView() :\r\n   this.state.value === \"\" ?\r\n   this.labelButton() :\r\n   this.renderDefaultView()\r\n   \r\n }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default LabelFunction;\r\n","import React, { Component } from \"react\";\r\nimport Delete from \"./Delete\";\r\nimport Archive from \"./Archive\";\r\nimport LabelFunction from \"./LabelFunction\";\r\n\r\nclass Note extends Component {\r\n  render() {\r\n    return (\r\n      <li id=\"hovernote\">\r\n        <a>\r\n          {this.props.note.name ? (\r\n            <h2>{this.props.note.name}</h2>\r\n          ) : (\r\n            <img src={this.props.note.image} className=\"image\" />\r\n          )}\r\n        </a>\r\n        <div id=\"hover\">\r\n        <div className=\"span\"></div>\r\n        <div className=\"btn-align\">\r\n        <Delete\r\n          onNoteDelete={() => this.props.onNoteDelete(this.props.note._id)}\r\n        />\r\n        <Archive\r\n          onNoteArchive={() => this.props.onNoteArchive(this.props.note._id)}\r\n        />\r\n        <LabelFunction label={this.props.note.label} \r\n        onLabelUpdate={(label) => this.props.onLabelUpdate(this.props.note._id, label)} />\r\n        </div>\r\n        </div>\r\n        \r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Note;\r\n","import React, { Component } from \"react\";\r\nimport Note from \"./Note\";\r\n\r\nclass Notes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const arr = this.props.notesProp;\r\n    const noteArr = arr\r\n      .filter((note) => {\r\n        return this.props.showArchived ? note.archive : !note.archive;\r\n      })\r\n      .map((note) => (\r\n        <Note\r\n          key={note._id}\r\n          note={note}\r\n          onNoteDelete={this.props.onNoteDelete}\r\n          onNoteArchive={this.props.onNoteArchive}\r\n          onLabelUpdate={this.props.onLabelUpdate}\r\n\r\n        />\r\n      ));\r\n    return <ul className=\"list\">{noteArr}</ul>;\r\n  }\r\n}\r\n\r\nexport default Notes;\r\n","import React, { Component } from \"react\";\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"page-container\">\r\n        <div className=\"content-wrap\">\r\n          <footer className=\"author\">\r\n            <h5 className=\"developer\" style={{ fontSize: \"15px\" }}>\r\n              Developed by Stefan Ungureanu\r\n            </h5>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nclass Archived extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"flex-container\">\r\n        <p style={{ fontSize: \"20px\" }} className=\"homepage\">\r\n          <a href=\"#\" onClick={this.props.onToggleArchived} style={{textDecoration: \"none\"}}>\r\n            Archived\r\n          </a>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Archived;\r\n","import React, { Component } from \"react\";\r\nclass Labels extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"flex-container\">\r\n        <p style={{ fontSize: \"20px\" }} className=\"homepage\">\r\n          <a href=\"#\" style={{textDecoration: \"none\"}}>Labels</a>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Labels;\r\n","import React, { Component } from 'react';\r\nimport Archived from \"./Archived\";\r\nimport Labels from \"./Labels\";\r\nimport { MdMenu } from \"react-icons/md\";\r\n\r\n\r\nclass SideBar extends Component {\r\n\r\n      constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          sidebarOpen : false\r\n        };\r\n      }\r\n      onSidebarOpen = () => {\r\n        this.setState({sidebarOpen: true});\r\n      }\r\n\r\n      onXButton = () => {\r\n          this.setState({sidebarOpen: false})\r\n      }\r\n\r\n      renderSidebar = () => {\r\n          return <div className=\"sidepanel\">\r\n  <a href=\"#\" onClick={this.onXButton} style={{marginRight:\"90px\", color:\"black\", border:\"0\", textDecoration:\"none\"}}>╳</a>\r\n <h1 style={{color: \"black\"}}>Options</h1>\r\n\r\n  <Archived onToggleArchived={this.props.onToggleArchived} />\r\n  <Labels />\r\n</div>\r\n      }\r\n\r\n      menuBar = () => {\r\n        return <div style={{marginLeft: \"80px\", marginTop:\"17px\"}}>\r\n              <button onClick={this.onSidebarOpen} style={{backgroundColor:\"white\", border:\"0\"}}>\r\n                  <MdMenu style={{ height: \"25px\", width: \"25px\"}} />\r\n              </button>\r\n                  </div>\r\n\r\n      }\r\n\r\n      render() {\r\n        return this.state.sidebarOpen ?\r\n          this.renderSidebar() :\r\n          this.menuBar()\r\n      }\r\n}\r\n \r\nexport default SideBar;","import React, { Component } from \"react\";\r\nimport SideBar from \"./SideBar\"\r\nclass HOMEPAGE extends Component { \r\n  render() {\r\n    return (\r\n      <div>\r\n      <div className=\"flex-container\">\r\n      <div><SideBar onToggleArchived={this.props.onToggleArchived} /></div>\r\n\r\n        <p style={{ fontSize: \"20px\" }} className=\"homepage\">\r\n          <a href=\"/\"  style={{textDecoration: \"none\"}}>Home</a>\r\n        </p>\r\n      </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HOMEPAGE;\r\n","import React, { Component } from \"react\";\r\nclass Logging extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"flex-container\">\r\n        <p style={{ fontSize: \"20px\" }} className=\"logging\">\r\n          You are not logged in\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Logging;\r\n","import React, { Component } from \"react\";\r\nimport HomePage from \"./HomePage\";\r\nimport Logging from \"./Logging\";\r\n\r\nclass Navbar extends Component {\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <nav className=\"flex-container\">\r\n        <HomePage onToggleArchived={this.props.onToggleArchived} />\r\n        <Logging />\r\n      </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport Remember from \"./Remember\";\r\nimport TextAdd from \"./TextAdd\";\r\nimport Notes from \"./Notes\";\r\nimport Footer from \"./Footer\";\r\nimport Navbar from \"./Navbar\";\r\nimport SideBar from \"./SideBar\"\r\nimport { getNotes } from \"../services/NotesService\";\r\nimport { addTextNote } from \"../services/NotesService\";\r\nimport { deleteNote } from \"../services/NotesService\";\r\nimport { archiveNote } from \"../services/NotesService\";\r\nimport { addImgNote } from \"../services/NotesService\";\r\nimport { labelAdd } from \"../services/NotesService\"\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { notes: [], showArchived: false};\r\n  }\r\n\r\n  componentDidMount() {\r\n    getNotes().then((notes) => this.setState({ notes: notes }));\r\n  }\r\n\r\n  toggleArchived = (e) => {\r\n    this.setState({\r\n      showArchived: !this.state.showArchived,\r\n    });\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    console.log(this.state.showArchived);\r\n  }\r\n\r\n\r\n  onNoteAdd = (noteText) => {\r\n    addTextNote(noteText).then((note) => {\r\n      const notesNew = [note, ...this.state.notes];\r\n      this.setState({ notes: notesNew });\r\n    });\r\n  };\r\n  onImgAdd = (image) => {\r\n    console.log(image);\r\n    addImgNote(image).then((note) => {\r\n      const notesNew = [note, ...this.state.notes];\r\n      this.setState({ notes: notesNew });\r\n    });\r\n  };\r\n\r\n  onNoteDelete = (noteID) => {\r\n    const notesNew = this.state.notes.filter((note) => note._id !== noteID);\r\n    this.setState({ notes: notesNew });\r\n    deleteNote(noteID);\r\n  };\r\n\r\n  onNoteArchive = (noteID) => {\r\n    const notesNew = this.state.notes;\r\n    notesNew.filter((note) => note._id === noteID)[0].archive = true;\r\n    this.setState({ notes: notesNew });\r\n    archiveNote(noteID);\r\n  };\r\n\r\n  onLabelUpdate = (noteID, label) => {\r\n    const notesNew = this.state.notes;\r\n    notesNew.filter((note) => note._id === noteID)[0].label = label\r\n    this.setState({ notes: notesNew});\r\n    labelAdd(noteID, label);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar onToggleArchived={this.toggleArchived} />\r\n        <Remember />\r\n        <TextAdd onNoteAdd={this.onNoteAdd} onImgAdd={this.onImgAdd} />\r\n        <Notes\r\n          notesProp={this.state.notes}\r\n          onNoteDelete={this.onNoteDelete}\r\n          onNoteArchive={this.onNoteArchive}\r\n          showArchived={this.state.showArchived}\r\n          onLabelUpdate={this.onLabelUpdate}\r\n        />\r\n        <ul id=\"img\"></ul>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","export function getNotes() {\r\n  return fetch(\"http://localhost:7787/notes/\") // Promise<string>, \"[{ \"name\": \"N1\" }, { \"name\": \"N2\" }]\"\r\n    .then((r) => r.json()); // Promise<object[]>, [{ name: \"N1\" }, { name: \"N2\" }]\r\n}\r\n\r\nexport function addTextNote(note) {\r\n  return fetch(\"http://localhost:7787/notes\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify({ name: note }),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  }).then((r) => r.json());\r\n}\r\n\r\nexport function addImgNote(image) {\r\n  return fetch(\"http://localhost:7787/notes\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify({ image: image }),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    }\r\n  }).then((r) => r.json())\r\n}\r\n\r\nexport function deleteNote(noteID) {\r\n  return fetch(\"http://localhost:7787/notes/\" + noteID, {\r\n    method: \"DELETE\",\r\n  });\r\n}\r\n\r\nexport function archiveNote(noteID) {\r\n  return fetch(\"http://localhost:7787/notes/\" + noteID, {\r\n    method: \"POST\",\r\n    body: JSON.stringify({ archive: true, }),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    }\r\n  });\r\n}\r\nexport function labelAdd(noteID, label) {\r\n  return fetch(\"http://localhost:7787/notes/\" + noteID, {\r\n    method: \"POST\",\r\n    body: JSON.stringify({ label: label }),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    }\r\n  });\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}